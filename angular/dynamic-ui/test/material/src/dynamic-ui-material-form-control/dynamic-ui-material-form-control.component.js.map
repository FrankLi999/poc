{"version":3,"sources":["material/src/dynamic-ui-material-form-control/dynamic-ui-material-form-control.component.ts"],"names":[],"mappings":"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","file":"dynamic-ui-material-form-control.component.js","sourcesContent":["import {\r\n    Component,\r\n    ContentChildren,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    Output,\r\n    QueryList,\r\n    SimpleChanges,\r\n    ViewChild,\r\n    ChangeDetectorRef\r\n} from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport {\r\n    MatAutocomplete,\r\n    MatCheckbox,\r\n    MatDatepicker,\r\n    MatFormField,\r\n    MatRadioGroup,\r\n    MatSelect,\r\n    MatSlider,\r\n    MatSlideToggle\r\n} from \"@angular/material\";\r\nimport {\r\n    DynamicUIFormValidationService,\r\n    BaseFormControlComponent,\r\n    BaseFormControlEvent,\r\n    ComponentTemplateDirective,\r\n    ComponentModel,\r\n    DYNAMIC_UI_COMPONENT_TYPE_DATAGRID,\r\n    DYNAMIC_UI_COMPONENT_TYPE_COLUMNS,\r\n    DYNAMIC_UI_COMPONENT_TYPE_CHECKBOX,\r\n    DYNAMIC_UI_COMPONENT_TYPE_CHECKBOX_GROUP,\r\n    DYNAMIC_UI_COMPONENT_TYPE_DATETIME,\r\n    DYNAMIC_UI_COMPONENT_TYPE_GROUP,\r\n    DYNAMIC_UI_COMPONENT_TYPE_TEXTFIELD,\r\n    DYNAMIC_UI_COMPONENT_TYPE_EDITOR,\r\n    DYNAMIC_UI_COMPONENT_TYPE_RADIO_GROUP,\r\n    DYNAMIC_UI_COMPONENT_TYPE_SELECT,\r\n    DYNAMIC_UI_COMPONENT_TYPE_TEXTAREA,\r\n    DYNAMIC_UI_COMPONENT_TYPE_SLIDER,\r\n    DYNAMIC_UI_COMPONENT_TYPE_SWITCH\r\n} from \"@bpw-ui/base\";\r\nimport {\r\n    MatFormControlType, MAT_VIEW_CHILD_SELECTOR\r\n} from \"../dynamic-ui-material-form.const\";\r\n\r\nexport type MatFormControlComponent = MatAutocomplete | MatCheckbox | MatDatepicker<Date> | MatFormField |\r\n    MatRadioGroup | MatSelect | MatSlider | MatSlideToggle;\r\n\r\n@Component({\r\n    selector: \"dynamic-ui-material-form-control\",\r\n    templateUrl: \"./dynamic-ui-material-form-control.component.html\"\r\n})\r\nexport class DynamicUIMaterialFormControlComponent extends BaseFormControlComponent implements OnChanges {\r\n\r\n    private _showCharacterCount: boolean = false;\r\n\r\n    @Input() componentId: boolean = true;\r\n    @Input() context: ComponentModel = null;\r\n    @Input() group: FormGroup;\r\n    @Input() hasErrorMessaging: boolean = false;\r\n    @Input() model: ComponentModel;\r\n    @Input() nestedTemplates: QueryList<ComponentTemplateDirective>;\r\n\r\n    @Input()\r\n    get showCharacterHint(): boolean {\r\n        return !!(this._showCharacterCount && (this.model as ComponentModel).maxLength && this.characterCount);\r\n    }\r\n\r\n    set showCharacterHint(value: boolean) {\r\n        this._showCharacterCount = value;\r\n    }\r\n\r\n    @Output() blur: EventEmitter<BaseFormControlEvent> = new EventEmitter<BaseFormControlEvent>();\r\n    @Output() change: EventEmitter<BaseFormControlEvent> = new EventEmitter<BaseFormControlEvent>();\r\n    @Output() focus: EventEmitter<BaseFormControlEvent> = new EventEmitter<BaseFormControlEvent>();\r\n\r\n    @ContentChildren(ComponentTemplateDirective) contentTemplates: QueryList<ComponentTemplateDirective>;\r\n\r\n    @ViewChild(MAT_VIEW_CHILD_SELECTOR) matViewChild: MatFormControlComponent | undefined;\r\n\r\n    type: MatFormControlType | null;\r\n\r\n    static getFormControlType(model: ComponentModel): MatFormControlType | null {\r\n\r\n        switch (model.type) {\r\n\r\n            case DYNAMIC_UI_COMPONENT_TYPE_DATAGRID:\r\n                return MatFormControlType.Array;\r\n            case DYNAMIC_UI_COMPONENT_TYPE_COLUMNS:\r\n                return MatFormControlType.Columns;\r\n            case DYNAMIC_UI_COMPONENT_TYPE_CHECKBOX:\r\n                return MatFormControlType.Checkbox;\r\n            case DYNAMIC_UI_COMPONENT_TYPE_CHECKBOX_GROUP:\r\n            case DYNAMIC_UI_COMPONENT_TYPE_GROUP:\r\n                return MatFormControlType.Group;\r\n            case DYNAMIC_UI_COMPONENT_TYPE_DATETIME:\r\n                return MatFormControlType.DatePicker;\r\n            case DYNAMIC_UI_COMPONENT_TYPE_TEXTFIELD:\r\n                return MatFormControlType.Input;\r\n            case DYNAMIC_UI_COMPONENT_TYPE_RADIO_GROUP:\r\n                return MatFormControlType.RadioGroup;\r\n            case DYNAMIC_UI_COMPONENT_TYPE_SELECT:\r\n                return MatFormControlType.Select;\r\n            case DYNAMIC_UI_COMPONENT_TYPE_SLIDER:\r\n                return MatFormControlType.Slider;\r\n            case DYNAMIC_UI_COMPONENT_TYPE_SWITCH:\r\n                return MatFormControlType.SlideToggle;\r\n            case DYNAMIC_UI_COMPONENT_TYPE_TEXTAREA:\r\n                return MatFormControlType.TextArea;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n    constructor(\r\n        protected changeDetectorRef: ChangeDetectorRef,\r\n        protected validationService: DynamicUIFormValidationService) {\r\n      super(changeDetectorRef, validationService);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n\r\n        if (changes[\"model\"]) {\r\n            this.type = DynamicUIMaterialFormControlComponent.getFormControlType(this.model);\r\n        }\r\n    }\r\n\r\n    get characterCount(): number | null {\r\n\r\n        if (this.matViewChild instanceof MatFormField) {\r\n            //return (this.matViewChild as MatFormField)._matInputChild.value.length;\r\n            return (this.matViewChild as MatFormField)._control.value.length;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n"]}