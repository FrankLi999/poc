{"version":3,"sources":["material/src/dynamic-ui-material-control/dynamic-ui-material-control.component.ts"],"names":[],"mappings":"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","file":"dynamic-ui-material-control.component.js","sourcesContent":["import {\r\n  Component,\r\n  OnInit,\r\n  AfterViewInit,\r\n  OnDestroy,\r\n  Input,\r\n  Output,\r\n  ContentChildren,\r\n  ViewContainerRef,\r\n  ComponentFactoryResolver,\r\n  Type,\r\n  QueryList,\r\n  EventEmitter,\r\n  ComponentRef,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\";\r\n\r\nimport {\r\n  BaseFormControlComponent,\r\n  ComponentModel,\r\n  BaseFormControlEvent,\r\n  ComponentTemplateDirective,\r\n  DynamicUIFormValidationService,\r\n  Utils\r\n} from \"@bpw-ui/base\";\r\nimport { DynamicUIMaterialFormControlComponent } from \"../dynamic-ui-material-form-control/dynamic-ui-material-form-control.component\";\r\nimport { MatFormControlType } from \"../dynamic-ui-material-form.const\";\r\nimport { MaterialComponentTypes } from \"../dynamic-ui-material.model\";\r\n\r\n@Component({\r\nselector: 'dynamic-ui-material-control',\r\n  template: `{{htmlTemplate}}`\r\n})\r\nexport class DynamicUIMaterialControlComponent extends BaseFormControlComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  @Input() componentId: boolean = true;\r\n  @Input() context: ComponentModel = null;\r\n  @Input() group: FormGroup;\r\n  @Input() hasErrorMessaging: boolean = false;\r\n  @Input() model: ComponentModel;\r\n  @Input() nestedTemplates: QueryList<ComponentTemplateDirective>;\r\n\r\n  @Input() showCharacterHint: boolean;\r\n\r\n  @Output() blur: EventEmitter<BaseFormControlEvent> = new EventEmitter<BaseFormControlEvent>();\r\n  @Output() change: EventEmitter<BaseFormControlEvent> = new EventEmitter<BaseFormControlEvent>();\r\n  @Output() focus: EventEmitter<BaseFormControlEvent> = new EventEmitter<BaseFormControlEvent>();\r\n  @ContentChildren(ComponentTemplateDirective) contentTemplates: QueryList<ComponentTemplateDirective>;\r\n  htmlTemplate: string;\r\n  componentRef: ComponentRef<DynamicUIMaterialFormControlComponent>;\r\n  type = 'dynamic-control';\r\n\r\n  constructor(\r\n    private viewContainerRef: ViewContainerRef,\r\n    private cfr: ComponentFactoryResolver,\r\n    protected changeDetectorRef: ChangeDetectorRef,\r\n    protected validationService: DynamicUIFormValidationService) {\r\n\r\n      super(changeDetectorRef, validationService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    const type = DynamicUIMaterialFormControlComponent.getFormControlType(this.model);\r\n    try {\r\n        const typ = MaterialComponentTypes[type];\r\n        this.viewContainerRef.clear();\r\n        const compFactory = this.cfr.resolveComponentFactory(typ);\r\n        this.componentRef = this.viewContainerRef.createComponent(compFactory);\r\n        const vc = this.componentRef.instance;\r\n        vc.componentId = this.componentId;\r\n        vc.context = this.context;\r\n        vc.group = this.group;\r\n        vc.hasErrorMessaging = this.hasErrorMessaging;\r\n        vc.model = this.model;\r\n        vc.nestedTemplates = this.nestedTemplates;\r\n        vc.blur = this.blur;\r\n        vc.change = this.change;\r\n        vc.focus = this.focus;\r\n        vc.showCharacterHint = this.showCharacterHint;\r\n        vc.setupControl();\r\n      } catch (ex) {\r\n        // if(ex === NoComponentFactoryError) {\r\n        this.htmlTemplate = ex.toString();\r\n        // }\r\n        Utils.err(ex);\r\n      }\r\n\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    super.ngAfterViewInit();\r\n    setTimeout(() => {\r\n      this.componentRef.instance.contentTemplates = this.contentTemplates;\r\n      this.componentRef.instance.setTemplates();\r\n    }, 0); // setTimeout to trigger change detection\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n    this.componentRef.destroy();\r\n  }\r\n\r\n}\r\n\r\n"]}