{"version":3,"sources":["primeng/src/dynamic-ui-primeng-form-control/dynamic-ui-primeng-form-control.component.ts"],"names":[],"mappings":"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","file":"dynamic-ui-primeng-form-control.component.js","sourcesContent":["import {\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  QueryList,\r\n  SimpleChanges,\r\n  ViewChild,\r\n  ChangeDetectorRef\r\n} from \"@angular/core\";\r\nimport {FormGroup} from \"@angular/forms\";\r\nimport {\r\n  AutoComplete,\r\n  Calendar,\r\n  Checkbox,\r\n  Chips,\r\n  Dropdown,\r\n  Editor,\r\n  InputSwitch,\r\n  MultiSelect,\r\n  Rating,\r\n  Slider\r\n} from \"primeng/primeng\";\r\nimport {\r\n  DynamicUIFormValidationService,\r\n  BaseFormControlComponent,\r\n  BaseFormControlEvent,\r\n  ComponentTemplateDirective,\r\n  ComponentModel,\r\n  DYNAMIC_UI_COMPONENT_TYPE_DATAGRID,\r\n  DYNAMIC_UI_COMPONENT_TYPE_COLUMNS,\r\n  DYNAMIC_UI_COMPONENT_TYPE_CHECKBOX,\r\n  DYNAMIC_UI_COMPONENT_TYPE_CHECKBOX_GROUP,\r\n  DYNAMIC_UI_COMPONENT_TYPE_EDITOR,\r\n  DYNAMIC_UI_COMPONENT_TYPE_GROUP,\r\n  DYNAMIC_UI_COMPONENT_TYPE_SELECT,\r\n  DYNAMIC_UI_COMPONENT_TYPE_TEXTAREA,\r\n  DYNAMIC_UI_COMPONENT_TYPE_DATETIME,\r\n  DYNAMIC_UI_COMPONENT_TYPE_TEXTFIELD,\r\n  DYNAMIC_UI_COMPONENT_TYPE_RADIO_GROUP,\r\n  DYNAMIC_UI_COMPONENT_TYPE_RATING,\r\n  DYNAMIC_UI_COMPONENT_TYPE_SLIDER,\r\n  DYNAMIC_UI_COMPONENT_TYPE_SWITCH,\r\n  DYNAMIC_UI_COMPONENT_TYPE_TIME,\r\n  Utils\r\n} from \"@bpw-ui/base\";\r\nimport {\r\n  PrimeNGFormControlType,\r\n  PRIME_NG_VIEW_CHILD_SELECTOR,\r\n  PRIME_NG_AUTOCOMPLETE_TEMPLATE_DIRECTIVES,\r\n  PRIME_NG_CHIPS_TEMPLATE_DIRECTIVES,\r\n  PRIME_NG_DROPDOWN_LIST_TEMPLATE_DIRECTIVES\r\n} from \"../dynamic-ui-primeng-form.const\";\r\n\r\nexport type PrimengFormControlType = AutoComplete | Calendar | Checkbox | Chips | Dropdown | Editor | InputSwitch |\r\n  MultiSelect | Rating | Slider;\r\n\r\n@Component({\r\n  selector: \"dynamic-ui-primeng-form-control\",\r\n  templateUrl: \"./dynamic-ui-primeng-form-control.component.html\"\r\n})\r\nexport class DynamicUIPrimengFormControlComponent extends BaseFormControlComponent implements OnChanges {\r\n\r\n  @Input() componentId: boolean = true;\r\n  @Input() context: ComponentModel = null;\r\n  @Input() group: FormGroup;\r\n  @Input() hasErrorMessaging: boolean = false;\r\n  @Input() model: ComponentModel;\r\n  @Input() nestedTemplates: QueryList<ComponentTemplateDirective>;\r\n\r\n  @Output() blur: EventEmitter<BaseFormControlEvent> = new EventEmitter<BaseFormControlEvent>();\r\n  @Output() change: EventEmitter<BaseFormControlEvent> = new EventEmitter<BaseFormControlEvent>();\r\n  @Output() focus: EventEmitter<BaseFormControlEvent> = new EventEmitter<BaseFormControlEvent>();\r\n\r\n  @ContentChildren(ComponentTemplateDirective) contentTemplates: QueryList<ComponentTemplateDirective>;\r\n\r\n  @ViewChild(PRIME_NG_VIEW_CHILD_SELECTOR) pViewChild: PrimengFormControlType | undefined;\r\n\r\n  suggestions: string[];\r\n  type: PrimeNGFormControlType | null;\r\n\r\n  static getFormControlType(model: ComponentModel): PrimeNGFormControlType | null {\r\n\r\n    switch (model.type) {\r\n\r\n      case DYNAMIC_UI_COMPONENT_TYPE_DATAGRID:\r\n        return PrimeNGFormControlType.Array;\r\n      case DYNAMIC_UI_COMPONENT_TYPE_COLUMNS:\r\n        return PrimeNGFormControlType.Columns;\r\n      case DYNAMIC_UI_COMPONENT_TYPE_CHECKBOX:\r\n        return PrimeNGFormControlType.Checkbox;\r\n      case DYNAMIC_UI_COMPONENT_TYPE_CHECKBOX_GROUP:\r\n      case DYNAMIC_UI_COMPONENT_TYPE_GROUP:\r\n        return PrimeNGFormControlType.Group;\r\n      case DYNAMIC_UI_COMPONENT_TYPE_DATETIME:\r\n      case DYNAMIC_UI_COMPONENT_TYPE_TIME:\r\n        return PrimeNGFormControlType.Calendar;\r\n      case DYNAMIC_UI_COMPONENT_TYPE_EDITOR:\r\n        return PrimeNGFormControlType.Editor;\r\n      case DYNAMIC_UI_COMPONENT_TYPE_TEXTFIELD:\r\n        const inputModel = model as ComponentModel;\r\n        if (inputModel.list) {\r\n          return PrimeNGFormControlType.AutoComplete;\r\n        } else if (inputModel.multiple) {\r\n          return PrimeNGFormControlType.Chips;\r\n        } else {\r\n          return PrimeNGFormControlType.Input;\r\n        }\r\n      case DYNAMIC_UI_COMPONENT_TYPE_RADIO_GROUP:\r\n        return PrimeNGFormControlType.RadioGroup;\r\n      case DYNAMIC_UI_COMPONENT_TYPE_RATING:\r\n        return PrimeNGFormControlType.Rating;\r\n      case DYNAMIC_UI_COMPONENT_TYPE_SELECT:\r\n        return model.multiple ? PrimeNGFormControlType.MultiSelect : PrimeNGFormControlType.Dropdown;\r\n      case DYNAMIC_UI_COMPONENT_TYPE_SLIDER:\r\n        return PrimeNGFormControlType.Slider;\r\n      case DYNAMIC_UI_COMPONENT_TYPE_SWITCH:\r\n        return PrimeNGFormControlType.InputSwitch;\r\n      case DYNAMIC_UI_COMPONENT_TYPE_TEXTAREA:\r\n        return PrimeNGFormControlType.TextArea;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  static getTemplateDirectives(component: PrimengFormControlType): any | null {\r\n\r\n    switch (component.constructor) {\r\n\r\n      case AutoComplete:\r\n        return PRIME_NG_AUTOCOMPLETE_TEMPLATE_DIRECTIVES;\r\n\r\n      case Chips:\r\n        return PRIME_NG_CHIPS_TEMPLATE_DIRECTIVES;\r\n\r\n      case Dropdown:\r\n        return PRIME_NG_DROPDOWN_LIST_TEMPLATE_DIRECTIVES;\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    protected changeDetectorRef: ChangeDetectorRef,\r\n    protected validationService: DynamicUIFormValidationService) {\r\n    super(changeDetectorRef, validationService);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    super.ngOnChanges(changes);\r\n\r\n    if (changes[\"model\"]) {\r\n      this.type = DynamicUIPrimengFormControlComponent.getFormControlType(this.model);\r\n    }\r\n  }\r\n\r\n  protected setTemplateDirective(directive: ComponentTemplateDirective): void {\r\n    if (this.pViewChild) {\r\n\r\n      let templateDirectives: any = DynamicUIPrimengFormControlComponent.getTemplateDirectives(this.pViewChild);\r\n\r\n      Object.keys(templateDirectives || {}).forEach((key: string) => {\r\n\r\n        if (templateDirectives[key] === directive.as) {\r\n          (this.pViewChild as any)[key] = directive.templateRef;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  setTemplates(): void {\r\n    super.setTemplates();\r\n    this.templates\r\n      .filter(directive => Utils.isString(directive.as))\r\n      .forEach(directive => this.setTemplateDirective(directive));\r\n  }\r\n\r\n  onAutoComplete($event: any): void {\r\n    this.suggestions = this.model.list.map(item => item);\r\n  }\r\n}\r\n"]}