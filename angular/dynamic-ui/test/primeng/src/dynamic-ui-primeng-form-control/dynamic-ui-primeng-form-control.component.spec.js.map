{"version":3,"sources":["primeng/src/dynamic-ui-primeng-form-control/dynamic-ui-primeng-form-control.component.spec.ts"],"names":[],"mappings":";;AAAA,sCAA2D;AAC3D,iDAAiF;AACjF,wCAA6E;AAC7E,8DAA+C;AAC/C,mEAA4E;AAC5E,2CAeyB;AACzB,oDAmB2B;AAC3B,uGAAkG;AAClG,+EAKwC;AAExC,QAAQ,CAAC,qBAAqB,EAAE;IAE5B,IAAI,SAAS,GAAG;QACR,IAAI,uCAAsB,CAAC,EAAC,EAAE,EAAE,UAAU,EAAC,CAAC;QAC5C,IAAI,4CAA2B,CAAC,EAAC,EAAE,EAAE,eAAe,EAAE,KAAK,EAAE,EAAE,EAAC,CAAC;QACjE,IAAI,yCAAwB,CAAC,EAAC,EAAE,EAAE,YAAY,EAAC,CAAC;QAChD,IAAI,qCAAoB,CAAC,EAAC,EAAE,EAAE,QAAQ,EAAC,CAAC;QACxC,IAAI,yCAAwB,CAAC,EAAC,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,EAAC,CAAC;QACrD,IAAI,wCAAuB,CAAC,EAAC,EAAE,EAAE,WAAW,EAAE,YAAY,EAAE,cAAM,OAAA,EAAE,EAAF,CAAE,EAAC,CAAC;QACtE,IAAI,wCAAuB,CAAC,EAAC,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAC,CAAC;QACzD,IAAI,oCAAmB,CAAC,EAAC,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,EAAE,EAAC,CAAC;QACrD,IAAI,yCAAwB,CAAC,EAAC,EAAE,EAAE,YAAY,EAAC,CAAC;QAChD,IAAI,qCAAoB,CAAC,EAAC,EAAE,EAAE,QAAQ,EAAC,CAAC;QACxC,IAAI,qCAAoB,CAAC,EAAC,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAAC,KAAK,EAAE,KAAK,EAAC,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAC,CAAC;QACjG,IAAI,qCAAoB,CAAC,EAAC,EAAE,EAAE,QAAQ,EAAC,CAAC;QACxC,IAAI,qCAAoB,CAAC,EAAC,EAAE,EAAE,QAAQ,EAAC,CAAC;QACxC,IAAI,uCAAsB,CAAC,EAAC,EAAE,EAAE,UAAU,EAAC,CAAC;QAC5C,IAAI,yCAAwB,CAAC,EAAC,EAAE,EAAE,YAAY,EAAC,CAAC;KACnD,EACD,SAAS,GAAG,SAAS,CAAC,CAAC,CAAwB,EAC/C,SAAoB,EACpB,OAA+D,EAC/D,SAA+C,EAC/C,YAA0B,EAC1B,WAAyB,CAAC;IAE9B,UAAU,CAAC,eAAK,CAAC;QAEb,iBAAO,CAAC,sBAAsB,CAAC;YAE3B,OAAO,EAAE;gBACL,2BAAmB;gBACnB,iCAAoB;gBACpB,yCAAwB,CAAC,OAAO,EAAE;gBAClC,4BAAkB;gBAClB,wBAAc;gBACd,wBAAc;gBACd,qBAAW;gBACX,wBAAc;gBACd,sBAAY;gBACZ,2BAAiB;gBACjB,yBAAe;gBACf,6BAAmB;gBACnB,2BAAiB;gBACjB,2BAAiB;gBACjB,sBAAY;gBACZ,sBAAY;gBACZ,uBAAa;aAChB;YACD,YAAY,EAAE,CAAC,+EAAoC,CAAC;SAEvD,CAAC,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC;YAExB,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,+EAAoC,CAAC,CAAC;YAExE,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC;YACtC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;QACxC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC;IAEJ,UAAU,CAAC,gBAAM,CAAC,CAAC,+CAA8B,CAAC,EAAE,UAAC,OAAuC;QAExF,SAAS,GAAG,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAE/C,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC;QAC5B,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC;QAE5B,SAAS,CAAC,WAAW,CAAC;YAElB,KAAK,EAAE,IAAI,mBAAY,CAAC,IAAI,EAAE,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC;YACpD,KAAK,EAAE,IAAI,mBAAY,CAAC,IAAI,EAAE,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC;SACvD,CAAC,CAAC;QAEH,OAAO,CAAC,aAAa,EAAE,CAAC;QAExB,WAAW,GAAG,YAAY,CAAC,KAAK,CAAC,qBAAE,CAAC,GAAG,CAAC,eAAa,SAAS,CAAC,EAAE,OAAI,CAAC,CAAC,CAAC;IAC5E,CAAC,CAAC,CAAC,CAAC;IAEJ,EAAE,CAAC,6BAA6B,EAAE;QAE9B,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;QACrC,MAAM,CAAC,SAAS,CAAC,OAAO,YAAY,mBAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5D,MAAM,CAAC,SAAS,CAAC,KAAK,YAAY,iBAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxD,MAAM,CAAC,SAAS,CAAC,KAAK,YAAY,0CAAyB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxE,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEhD,MAAM,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC,WAAW,EAAE,CAAC;QACtD,MAAM,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC,WAAW,EAAE,CAAC;QACvD,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,WAAW,EAAE,CAAC;QAEpD,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;QACrC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;QACvC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;QAEtC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,WAAW,EAAE,CAAC;QAC9C,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,WAAW,EAAE,CAAC;QAE9C,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAExC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,qDAAsB,CAAC,KAAK,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE;QAE/B,MAAM,CAAC,WAAW,YAAY,mBAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+CAA+C,EAAE;QAEhD,KAAK,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;QAElC,WAAW,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAC/C,WAAW,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAE9C,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE;QAEvC,KAAK,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;QAElC,WAAW,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAEhD,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sDAAsD,EAAE;QAEvD,KAAK,CAAC,SAAS,EAAE,uBAAuB,CAAC,CAAC;QAE1C,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAEnC,MAAM,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAC/D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sDAAsD,EAAE;QAEvD,KAAK,CAAC,SAAS,EAAE,qBAAqB,CAAC,CAAC;QAExC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEpC,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAC7D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uEAAuE,EAAE;QAExE,KAAK,CAAC,SAAS,EAAE,wBAAwB,CAAC,CAAC;QAE3C,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAErC,MAAM,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE;QAE7C,IAAI,MAAM,GAAG,+EAAoC,CAAC,kBAAkB,CAAC;QAErE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,qDAAsB,CAAC,QAAQ,CAAC,CAAC;QAEtE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,qDAAsB,CAAC,KAAK,CAAC,CAAC;QAEnE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,qDAAsB,CAAC,QAAQ,CAAC,CAAC;QAEtE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,qDAAsB,CAAC,MAAM,CAAC,CAAC;QAEpE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QAExC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,qDAAsB,CAAC,KAAK,CAAC,CAAC;QAEnE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,qDAAsB,CAAC,KAAK,CAAC,CAAC;QAEnE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,qDAAsB,CAAC,KAAK,CAAC,CAAC;QAElE,SAAS,CAAC,CAAC,CAAyB,CAAC,QAAQ,GAAG,IAAI,CAAC;QACtD,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,qDAAsB,CAAC,KAAK,CAAC,CAAC;QAElE,SAAS,CAAC,CAAC,CAAyB,CAAC,IAAI,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QACzE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,qDAAsB,CAAC,YAAY,CAAC,CAAC;QAE1E,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,qDAAsB,CAAC,UAAU,CAAC,CAAC;QAExE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,qDAAsB,CAAC,MAAM,CAAC,CAAC;QAEpE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,qDAAsB,CAAC,QAAQ,CAAC,CAAC;QAEtE,SAAS,CAAC,EAAE,CAAkC,CAAC,QAAQ,GAAG,IAAI,CAAC;QAChE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,qDAAsB,CAAC,WAAW,CAAC,CAAC;QAE1E,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,qDAAsB,CAAC,MAAM,CAAC,CAAC;QAErE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,qDAAsB,CAAC,WAAW,CAAC,CAAC;QAE1E,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,qDAAsB,CAAC,QAAQ,CAAC,CAAC;QAEvE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,qDAAsB,CAAC,QAAQ,CAAC,CAAC;IAC3E,CAAC,CAAC,CAAC;IAEH,GAAG,CAAC,8CAA8C,EAAE,eAAK,CAAC;QAEtD,IAAI,MAAM,GAAG,+EAAoC,CAAC,qBAAqB,CAAC;QAExE,IAAI,QAAQ,GAAG,iBAAO,CAAC,eAAe,CAAC,+EAAoC,CAAC,EACxE,UAAU,GAAG,QAAQ,CAAC,iBAAiB,CAAC;QAE3C,SAAS,CAAC,CAAC,CAAyB,CAAC,IAAI,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QAEzE,UAAU,CAAC,KAAK,GAAG,SAAS,CAAC;QAC7B,UAAU,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QAEhC,QAAQ,CAAC,aAAa,EAAE,CAAC;QAEzB,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,wEAAyC,CAAC,CAAC;IAC7F,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC","file":"dynamic-ui-primeng-form-control.component.spec.js","sourcesContent":["import { DebugElement, SimpleChange } from \"@angular/core\";\r\nimport { TestBed, async, inject, ComponentFixture } from \"@angular/core/testing\";\r\nimport { ReactiveFormsModule, FormGroup, FormControl } from \"@angular/forms\";\r\nimport { By } from \"@angular/platform-browser\";\r\nimport { NoopAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport {\r\n    AutoCompleteModule,\r\n    CalendarModule,\r\n    CheckboxModule,\r\n    ChipsModule,\r\n    DropdownModule,\r\n    EditorModule,\r\n    InputSwitchModule,\r\n    InputTextModule,\r\n    InputTextareaModule,\r\n    MultiSelectModule,\r\n    RadioButtonModule,\r\n    RatingModule,\r\n    SliderModule,\r\n    SpinnerModule\r\n} from \"primeng/primeng\";\r\nimport {\r\n    DynamicUIFormsCoreModule,\r\n    DynamicUINg2DynamicFormService,\r\n    DynamicUICheckboxModel,\r\n    DynamicUICheckboxGroupModel,\r\n    DynamicUIDatePickerModel,\r\n    DynamicUIEditorModel,\r\n    DynamicUIFileUploadModel,\r\n    DynamicUIFormArrayModel,\r\n    DynamicUIFormControlModel,\r\n    DynamicUIFormGroupModel,\r\n    DynamicUIInputModel,\r\n    DynamicUIRadioGroupModel,\r\n    DynamicUIRatingModel,\r\n    DynamicUISelectModel,\r\n    DynamicUISliderModel,\r\n    DynamicUISwitchModel,\r\n    DynamicUITextAreaModel,\r\n    DynamicUITimePickerModel\r\n} from \"../DynamicUI-core\";\r\nimport { DynamicUIPrimengFormControlComponent } from \"./DynamicUI-primeng-form-control.component\";\r\nimport {\r\n    PRIME_NG_AUTOCOMPLETE_TEMPLATE_DIRECTIVES,\r\n    PRIME_NG_CHIPS_TEMPLATE_DIRECTIVES,\r\n    PRIME_NG_DROPDOWN_LIST_TEMPLATE_DIRECTIVES,\r\n    PrimeNGFormControlType\r\n} from \"./DynamicUI-primeng-form.const\";\r\n\r\ndescribe(\"-primeng test suite\", () => {\r\n\r\n    let formModel = [\r\n            new DynamicUICheckboxModel({id: \"checkbox\"}),\r\n            new DynamicUICheckboxGroupModel({id: \"checkboxGroup\", group: []}),\r\n            new DynamicUIDatePickerModel({id: \"datepicker\"}),\r\n            new DynamicUIEditorModel({id: \"editor\"}),\r\n            new DynamicUIFileUploadModel({id: \"upload\", url: \"\"}),\r\n            new DynamicUIFormArrayModel({id: \"formArray\", groupFactory: () => []}),\r\n            new DynamicUIFormGroupModel({id: \"formGroup\", group: []}),\r\n            new DynamicUIInputModel({id: \"input\", maxLength: 51}),\r\n            new DynamicUIRadioGroupModel({id: \"radioGroup\"}),\r\n            new DynamicUIRatingModel({id: \"rating\"}),\r\n            new DynamicUISelectModel({id: \"select\", options: [{value: \"One\"}, {value: \"Two\"}], value: \"One\"}),\r\n            new DynamicUISliderModel({id: \"slider\"}),\r\n            new DynamicUISwitchModel({id: \"switch\"}),\r\n            new DynamicUITextAreaModel({id: \"textarea\"}),\r\n            new DynamicUITimePickerModel({id: \"timepicker\"})\r\n        ],\r\n        testModel = formModel[7] as DynamicUIInputModel,\r\n        formGroup: FormGroup,\r\n        fixture: ComponentFixture<DynamicUIPrimengFormControlComponent>,\r\n        component: DynamicUIPrimengFormControlComponent,\r\n        debugElement: DebugElement,\r\n        testElement: DebugElement;\r\n\r\n    beforeEach(async(() => {\r\n\r\n        TestBed.configureTestingModule({\r\n\r\n            imports: [\r\n                ReactiveFormsModule,\r\n                NoopAnimationsModule,\r\n                DynamicUIFormsCoreModule.forRoot(),\r\n                AutoCompleteModule,\r\n                CalendarModule,\r\n                CheckboxModule,\r\n                ChipsModule,\r\n                DropdownModule,\r\n                EditorModule,\r\n                InputSwitchModule,\r\n                InputTextModule,\r\n                InputTextareaModule,\r\n                MultiSelectModule,\r\n                RadioButtonModule,\r\n                RatingModule,\r\n                SliderModule,\r\n                SpinnerModule\r\n            ],\r\n            declarations: [DynamicUIPrimengFormControlComponent]\r\n\r\n        }).compileComponents().then(() => {\r\n\r\n            fixture = TestBed.createComponent(DynamicUIPrimengFormControlComponent);\r\n\r\n            component = fixture.componentInstance;\r\n            debugElement = fixture.debugElement;\r\n        });\r\n    }));\r\n\r\n    beforeEach(inject([DynamicUINg2DynamicFormService], (service: DynamicUINg2DynamicFormService) => {\r\n\r\n        formGroup = service.createFormGroup(formModel);\r\n\r\n        component.group = formGroup;\r\n        component.model = testModel;\r\n\r\n        component.ngOnChanges({\r\n\r\n            group: new SimpleChange(null, component.group, true),\r\n            model: new SimpleChange(null, component.model, true)\r\n        });\r\n\r\n        fixture.detectChanges();\r\n\r\n        testElement = debugElement.query(By.css(`input[id='${testModel.id}']`));\r\n    }));\r\n\r\n    it(\"should initialize correctly\", () => {\r\n\r\n        expect(component.context).toBeNull();\r\n        expect(component.control instanceof FormControl).toBe(true);\r\n        expect(component.group instanceof FormGroup).toBe(true);\r\n        expect(component.model instanceof DynamicUIFormControlModel).toBe(true);\r\n        expect(component.hasErrorMessaging).toBe(false);\r\n\r\n        expect(component.onControlValueChanges).toBeDefined();\r\n        expect(component.onModelDisabledUpdates).toBeDefined();\r\n        expect(component.onModelValueUpdates).toBeDefined();\r\n\r\n        expect(component.blur).toBeDefined();\r\n        expect(component.change).toBeDefined();\r\n        expect(component.focus).toBeDefined();\r\n\r\n        expect(component.onValueChange).toBeDefined();\r\n        expect(component.onFocusChange).toBeDefined();\r\n\r\n        expect(component.isValid).toBe(true);\r\n        expect(component.isInvalid).toBe(false);\r\n\r\n        expect(component.type).toEqual(PrimeNGFormControlType.Input);\r\n    });\r\n\r\n    it(\"should have an input element\", () => {\r\n\r\n        expect(testElement instanceof DebugElement).toBe(true);\r\n    });\r\n\r\n    it(\"should listen to native focus and blur events\", () => {\r\n\r\n        spyOn(component, \"onFocusChange\");\r\n\r\n        testElement.triggerEventHandler(\"focus\", null);\r\n        testElement.triggerEventHandler(\"blur\", null);\r\n\r\n        expect(component.onFocusChange).toHaveBeenCalledTimes(2);\r\n    });\r\n\r\n    it(\"should listen to native change event\", () => {\r\n\r\n        spyOn(component, \"onValueChange\");\r\n\r\n        testElement.triggerEventHandler(\"change\", null);\r\n\r\n        expect(component.onValueChange).toHaveBeenCalled();\r\n    });\r\n\r\n    it(\"should update model value when control value changes\", () => {\r\n\r\n        spyOn(component, \"onControlValueChanges\");\r\n\r\n        component.control.setValue(\"test\");\r\n\r\n        expect(component.onControlValueChanges).toHaveBeenCalled();\r\n    });\r\n\r\n    it(\"should update control value when model value changes\", () => {\r\n\r\n        spyOn(component, \"onModelValueUpdates\");\r\n\r\n        testModel.valueUpdates.next(\"test\");\r\n\r\n        expect(component.onModelValueUpdates).toHaveBeenCalled();\r\n    });\r\n\r\n    it(\"should update control activation when model disabled property changes\", () => {\r\n\r\n        spyOn(component, \"onModelDisabledUpdates\");\r\n\r\n        testModel.disabledUpdates.next(true);\r\n\r\n        expect(component.onModelDisabledUpdates).toHaveBeenCalled();\r\n    });\r\n\r\n    it(\"should determine correct form control type\", () => {\r\n\r\n        let testFn = DynamicUIPrimengFormControlComponent.getFormControlType;\r\n\r\n        expect(testFn(formModel[0])).toEqual(PrimeNGFormControlType.Checkbox);\r\n\r\n        expect(testFn(formModel[1])).toEqual(PrimeNGFormControlType.Group);\r\n\r\n        expect(testFn(formModel[2])).toEqual(PrimeNGFormControlType.Calendar);\r\n\r\n        expect(testFn(formModel[3])).toEqual(PrimeNGFormControlType.Editor);\r\n\r\n        expect(testFn(formModel[4])).toBeNull();\r\n\r\n        expect(testFn(formModel[5])).toEqual(PrimeNGFormControlType.Array);\r\n\r\n        expect(testFn(formModel[6])).toEqual(PrimeNGFormControlType.Group);\r\n\r\n        expect(testFn(formModel[7])).toEqual(PrimeNGFormControlType.Input);\r\n\r\n        (formModel[7] as DynamicUIInputModel).multiple = true;\r\n        expect(testFn(formModel[7])).toEqual(PrimeNGFormControlType.Chips);\r\n\r\n        (formModel[7] as DynamicUIInputModel).list = [\"test1\", \"test2\", \"test3\"];\r\n        expect(testFn(formModel[7])).toEqual(PrimeNGFormControlType.AutoComplete);\r\n\r\n        expect(testFn(formModel[8])).toEqual(PrimeNGFormControlType.RadioGroup);\r\n\r\n        expect(testFn(formModel[9])).toEqual(PrimeNGFormControlType.Rating);\r\n\r\n        expect(testFn(formModel[10])).toEqual(PrimeNGFormControlType.Dropdown);\r\n\r\n        (formModel[10] as DynamicUISelectModel<string>).multiple = true;\r\n        expect(testFn(formModel[10])).toEqual(PrimeNGFormControlType.MultiSelect);\r\n\r\n        expect(testFn(formModel[11])).toEqual(PrimeNGFormControlType.Slider);\r\n\r\n        expect(testFn(formModel[12])).toEqual(PrimeNGFormControlType.InputSwitch);\r\n\r\n        expect(testFn(formModel[13])).toEqual(PrimeNGFormControlType.TextArea);\r\n\r\n        expect(testFn(formModel[14])).toEqual(PrimeNGFormControlType.Calendar);\r\n    });\r\n\r\n    xit(\"should determine correct template directives\", async(() => {\r\n\r\n        let testFn = DynamicUIPrimengFormControlComponent.getTemplateDirectives;\r\n\r\n        let fixture1 = TestBed.createComponent(DynamicUIPrimengFormControlComponent),\r\n            component1 = fixture1.componentInstance;\r\n\r\n        (formModel[7] as DynamicUIInputModel).list = [\"test1\", \"test2\", \"test3\"];\r\n\r\n        component1.group = formGroup;\r\n        component1.model = formModel[7];\r\n\r\n        fixture1.detectChanges();\r\n\r\n        expect(testFn(component1.pViewChild)).toEqual(PRIME_NG_AUTOCOMPLETE_TEMPLATE_DIRECTIVES);\r\n    }));\r\n});"]}