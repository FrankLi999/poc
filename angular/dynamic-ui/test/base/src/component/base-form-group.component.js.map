{"version":3,"sources":["base/src/component/base-form-group.component.ts"],"names":[],"mappings":";;;;;;;;;;;;AAiBA,iFAEyC;AAMzC;IAAqD,0CAA0B;IAE3E,gCACc,iBAAoC,EACpC,iBAAiD;QAF/D,YAGE,kBAAM,iBAAiB,EAAE,iBAAiB,CAAC,SAC5C;QAHa,uBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,uBAAiB,GAAjB,iBAAiB,CAAgC;QAH/D,UAAI,GAAE,OAAO,CAAC;;IAKd,CAAC;IAED,4CAAW,GAAX,UAAY,OAAsB;QAC9B,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC;IACL,CAAC;IAED,gDAAe,GAAf;QAAA,iBAEC;QADG,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,YAAY,EAAE,EAAnB,CAAmB,EAAE,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED,6CAAY,GAAZ;QACI,oBAAoB;QACpB,wBAAwB;QACxB,2EAA2E;QAC3E,QAAQ;QACR,IAAI;IACR,CAAC;IAED,sBAAI,6CAAS;aAAb;YACI,MAAM,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC/E,CAAC;;;OAAA;IAED,6CAAY,GAAZ;QAAA,iBAMC;QALG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,QAAoC;YACxD,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,KAAK,OAAO,IAAI,QAAQ,CAAC,OAAO,KAAK,KAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC;gBACrG,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC7B,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAES,2CAAU,GAApB;QACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;IAC1B,CAAC;IACL,6BAAC;AAAD,CAzCA,AAyCC,CAzCoD,0DAA0B,GAyC9E;AAzCqB,wDAAsB","file":"base-form-group.component.js","sourcesContent":["import {\r\n  EventEmitter,\r\n  QueryList,\r\n  SimpleChanges,\r\n  OnChanges,\r\n  AfterViewInit,\r\n  SimpleChange,\r\n  ChangeDetectorRef\r\n} from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n\r\nimport {\r\n  DynamicUIFormValidationService\r\n} from '../service/dynamic-ui-form-validation.service';\r\nimport {\r\n    BaseFormControlComponent,\r\n} from \"./base-form-control.component\";\r\nimport {\r\n  BaseFormCompositeComponent\r\n} from './base-form-composite.component';\r\nimport {\r\n    ComponentModel\r\n} from \"../model/form/component.model\";\r\nimport { ComponentTemplateDirective } from \"../directive/component-template.directive\";\r\n\r\nexport abstract class BaseFormGroupComponent extends BaseFormCompositeComponent implements OnChanges, AfterViewInit {\r\n    type= 'group';\r\n    constructor(\r\n        protected changeDetectorRef: ChangeDetectorRef,\r\n        protected validationService: DynamicUIFormValidationService) {\r\n      super(changeDetectorRef, validationService);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes[\"group\"] || changes[\"model\"]) {\r\n            this.setupControl();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        setTimeout(() => this.setTemplates(), 0);\r\n    }\r\n\r\n    setupControl() {\r\n        // if (this.model) {\r\n        //     if (this.group) {\r\n        //         this.control = this.group.get(this.getModelId()) as FormControl;\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    get templates(): QueryList<ComponentTemplateDirective> {\r\n        return this.nestedTemplates ? this.nestedTemplates : this.contentTemplates;\r\n    }\r\n\r\n    setTemplates(): void {\r\n        this.templates.forEach((template: ComponentTemplateDirective) => {\r\n            if (template.as === null && (template.modelType === 'group' || template.modelId === this.getModelId())) {\r\n                this.template = template;\r\n            }\r\n        });\r\n    }\r\n\r\n    protected getModelId(): string {\r\n        return this.model.key;\r\n    }\r\n}\r\n"]}