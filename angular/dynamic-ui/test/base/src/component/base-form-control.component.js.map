{"version":3,"sources":["base/src/component/base-form-control.component.ts"],"names":[],"mappings":"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","file":"base-form-control.component.js","sourcesContent":["import {\r\n    AfterViewInit,\r\n    EventEmitter,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    QueryList,\r\n    SimpleChange,\r\n    SimpleChanges,\r\n    ChangeDetectorRef\r\n} from \"@angular/core\";\r\nimport { FormControl, FormGroup } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\n\r\nimport {\r\n  ComponentModel\r\n} from \"../model/form/component.model\";\r\nimport {\r\n  DYNAMIC_UI_COMPONENT_TYPE_TEXTFIELD,\r\n  DYNAMIC_UI_COMPONENT_TYPE_FILE\r\n} from \"../model/form/form.model\";\r\nimport { ComponentTemplateDirective } from \"../directive/component-template.directive\";\r\nimport { Utils } from \"../utils/core.utils\";\r\nimport { DynamicUIFormValidationService } from \"../service/dynamic-ui-form-validation.service\";\r\nimport { BaseComponent } from './base.component';\r\n\r\n\r\nexport interface BaseFormControlEvent {\r\n  $event: Event | FocusEvent | BaseFormControlEvent | any;\r\n  context: ComponentModel | null;\r\n  control: FormControl;\r\n  group: FormGroup;\r\n  model: ComponentModel;\r\n  type: string;\r\n}\r\n\r\nexport enum BaseFormControlEventType {\r\n  Blur = 1,\r\n  Change = 2,\r\n  Focus = 3,\r\n  Custom = 4\r\n}\r\nexport abstract class BaseFormControlComponent extends BaseComponent implements OnChanges, OnInit, AfterViewInit, OnDestroy {\r\n\r\n    control: FormControl;\r\n    group: FormGroup;\r\n    hasErrorMessaging = false;\r\n    model: ComponentModel;\r\n\r\n    blur: EventEmitter<BaseFormControlEvent>;\r\n    change: EventEmitter<BaseFormControlEvent>;\r\n    focus: EventEmitter<BaseFormControlEvent>;\r\n    customEvent: EventEmitter<BaseFormControlEvent>;\r\n\r\n    private subscriptions: Subscription[] = [];\r\n\r\n    constructor(\r\n      protected changeDetectorRef: ChangeDetectorRef,\r\n      protected validationService: DynamicUIFormValidationService) {\r\n        super(changeDetectorRef);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n      if (changes[\"model\"] || changes[\"group\"] ) {\r\n        this.setupControl();\r\n      }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        if (!Utils.isDefined(this.group)) {\r\n            throw new Error(`no [group] input set for DynamicUIFormControlComponent`);\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        super.ngAfterViewInit();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        super.ngOnDestroy();\r\n        this.unsubscribe();\r\n    }\r\n\r\n    setupControl() {\r\n        super.setupControl();\r\n        if (this.model) {\r\n            this.unsubscribe();\r\n            if (this.model.relation && this.model.relation.length > 0) {\r\n                this.setControlRelations();\r\n            }\r\n        }\r\n    }\r\n\r\n    get errorMessages(): string[] {\r\n        if (this.hasErrorMessaging && this.model.hasErrorMessages) {\r\n            // TODO\r\n            return [];\r\n        }\r\n        return [];\r\n    }\r\n\r\n    get hasHint(): boolean { // needed for AOT\r\n        // TODO\r\n        return false;\r\n    }\r\n\r\n    get hasList(): boolean { // needed for AOT\r\n        // TODO\r\n        return false;\r\n    }\r\n\r\n    get isInvalid(): boolean {\r\n        return this.control.touched && this.control.invalid;\r\n    }\r\n\r\n    get isValid(): boolean {\r\n        return this.control.valid;\r\n    }\r\n\r\n    get showErrorMessages(): boolean {\r\n        return this.control.touched && !this.hasFocus && this.isInvalid;\r\n    }\r\n\r\n    protected setControlRelations(): void {\r\n        //TODO\r\n    }\r\n\r\n    unsubscribe(): void {\r\n\r\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\r\n        this.subscriptions = [];\r\n    }\r\n\r\n    onModelDisabledUpdates(value: boolean): void {\r\n        value ? this.control.disable() : this.control.enable();\r\n    }\r\n\r\n    onFilterChange($event: any | BaseFormControlEvent): void {\r\n        // TODO\r\n    }\r\n\r\n    onValueChange($event: Event | BaseFormControlEvent | any): void {\r\n\r\n        if ($event && $event instanceof Event) { // native HTML5 change event\r\n\r\n            if (this.model.type === DYNAMIC_UI_COMPONENT_TYPE_TEXTFIELD) {\r\n\r\n                let model = this.model as ComponentModel;\r\n\r\n                if (model.inputType === DYNAMIC_UI_COMPONENT_TYPE_FILE) {\r\n\r\n                    let inputElement: any = ($event as Event).target || ($event as Event).srcElement;\r\n\r\n                    model.files = inputElement.files as FileList;\r\n                }\r\n            }\r\n\r\n            this.change.emit(this.createEvent($event as Event, \"change\"));\r\n\r\n        } else if ($event && $event.hasOwnProperty(\"$event\")) { // event bypass\r\n\r\n            this.change.emit($event as BaseFormControlEvent);\r\n\r\n        } else { // custom library value change event\r\n\r\n            this.change.emit(this.createEvent($event, \"change\"));\r\n        }\r\n    }\r\n\r\n\r\n    onBlur($event: FocusEvent | BaseFormControlEvent | any): void {\r\n\r\n        if ($event && $event.hasOwnProperty(\"$event\")) { // event bypass\r\n\r\n            this.blur.emit($event as BaseFormControlEvent);\r\n\r\n        } else { // native HTML 5 or UI library blur event\r\n\r\n            this.hasFocus = false;\r\n            this.blur.emit(this.createEvent($event, \"blur\"));\r\n        }\r\n    }\r\n\r\n\r\n    onFocus($event: FocusEvent | BaseFormControlEvent | any): void {\r\n\r\n        if ($event && $event.hasOwnProperty(\"$event\")) { // event bypass\r\n\r\n            this.focus.emit($event as BaseFormControlEvent);\r\n\r\n        } else { // native HTML 5 or UI library focus event\r\n\r\n            this.hasFocus = true;\r\n            this.focus.emit(this.createEvent($event, \"focus\"));\r\n        }\r\n    }\r\n\r\n\r\n    onCustomEvent($event: any, type: string | null = null): void {\r\n\r\n        if ($event && $event.hasOwnProperty(\"$event\") && $event.hasOwnProperty(\"type\")) { // child event bypass\r\n\r\n            this.customEvent.emit($event as BaseFormControlEvent);\r\n\r\n        } else { // native UI library custom event\r\n\r\n            this.customEvent.emit(this.createEvent($event, type));\r\n        }\r\n    }\r\n\r\n    protected createEvent($event: any, type: string): BaseFormControlEvent {\r\n      return {$event, context: this.context, control: this.control, group: this.group, model: this.model, type};\r\n    }\r\n}\r\n"]}