{"version":3,"sources":["base/src/component/base.component.ts"],"names":[],"mappings":";;AAkBA,kDAA4C;AAC5C;IAYE,uBACc,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAPlD,oBAAe,GAAiD,IAAI,CAAC;IAQjE,CAAC;IAEL,mCAAW,GAAX,UAAY,OAAsB;QAChC,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAiB,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC;IACH,CAAC;IAED,gCAAQ,GAAR;QACI,EAAE,CAAC,CAAC,CAAC,kBAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;QAC9E,CAAC;IACL,CAAC;IAED,uCAAe,GAAf;QAAA,iBAGC;QAFG,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,YAAY,EAAE,EAAnB,CAAmB,EAAE,CAAC,CAAC,CAAC,CAAC,yCAAyC;QACnF,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;IAC3C,CAAC;IAED,mCAAW,GAAX;IACA,CAAC;IAED,oCAAY,GAAZ;IACA,CAAC;IAED,sBAAI,oCAAS;aAAb;YACI,MAAM,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC/E,CAAC;;;OAAA;IAED,oCAAY,GAAZ;QAAA,iBAMC;QALG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,QAAoC;YACxD,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,KAAK,KAAI,CAAC,KAAK,CAAC,IAAI,IAAI,QAAQ,CAAC,OAAO,KAAK,KAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC7G,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC7B,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAES,kCAAU,GAApB;QACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;IAC1B,CAAC;IAEH,oBAAC;AAAD,CAvDA,AAuDC,IAAA;AAvDqB,sCAAa","file":"base.component.js","sourcesContent":["import {\r\n    ChangeDetectorRef,\r\n    AfterViewInit,\r\n    EventEmitter,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    QueryList,\r\n    SimpleChange,\r\n    SimpleChanges\r\n} from \"@angular/core\";\r\nimport { FormControl, FormGroup } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\n\r\nimport {\r\n    ComponentModel\r\n} from \"../model/form/component.model\";\r\nimport { ComponentTemplateDirective } from \"../directive/component-template.directive\";\r\nimport { Utils } from \"../utils/core.utils\";\r\nexport abstract class BaseComponent implements OnChanges, OnInit, AfterViewInit, OnDestroy {\r\n\r\n  componentId: boolean;\r\n  context: ComponentModel | null;\r\n  hasFocus: boolean;\r\n  model: ComponentModel;\r\n  nestedTemplates: QueryList<ComponentTemplateDirective> | null = null;\r\n  contentTemplates: QueryList<ComponentTemplateDirective>;\r\n  template: ComponentTemplateDirective;\r\n\r\n  abstract type: number | string | null;\r\n\r\n  constructor(\r\n      protected changeDetectorRef: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes[\"model\"] as SimpleChange) {\r\n      this.setupControl();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n      if (!Utils.isDefined(this.model)) {\r\n          throw new Error(`no [model] input set for DynamicUIFormControlComponent`);\r\n      }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n      setTimeout(() => this.setTemplates(), 0); // setTimeout to trigger change detection\r\n      this.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n\r\n  setupControl() {\r\n  }\r\n\r\n  get templates(): QueryList<ComponentTemplateDirective> {\r\n      return this.nestedTemplates ? this.nestedTemplates : this.contentTemplates;\r\n  }\r\n\r\n  setTemplates(): void {\r\n      this.templates.forEach((template: ComponentTemplateDirective) => {\r\n          if (template.as === null && (template.modelType === this.model.type || template.modelId === this.getModelId())) {\r\n              this.template = template;\r\n          }\r\n      });\r\n  }\r\n\r\n  protected getModelId(): string {\r\n      return this.model.key;\r\n  }\r\n\r\n}\r\n"]}