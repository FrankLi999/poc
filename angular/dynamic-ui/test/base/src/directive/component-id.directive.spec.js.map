{"version":3,"sources":["base/src/directive/component-id.directive.spec.ts"],"names":[],"mappings":";;;;;;;;AAAA,iDAAkE;AAClE,sCAAwD;AACxD,8DAA+C;AAC/C,mEAAgE;AAQhE,IAAM,aAAa;IAAnB;IACA,CAAC;IAAD,oBAAC;AAAD,CADA,AACC,IAAA;AADK,aAAa;IANlB,gBAAS,CAAC;QACP,QAAQ,EAAE,qGAGT;KACJ,CAAC;GACI,aAAa,CAClB;AAED,QAAQ,CAAC,iCAAiC,EAAE;IAExC,IAAI,OAAwC,EACxC,UAA0B,CAAC;IAE/B,UAAU,CAAC;QAEP,OAAO,GAAG,iBAAO,CAAC,sBAAsB,CAAC;YAErC,YAAY,EAAE,CAAC,6CAAoB,EAAE,aAAa,CAAC;SAEtD,CAAC,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;QAElC,OAAO,CAAC,aAAa,EAAE,CAAC;QAExB,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,qBAAE,CAAC,SAAS,CAAC,6CAAoB,CAAC,CAAC,CAAC;IACnF,CAAC,CAAC,CAAC;IAGH,EAAE,CAAC,4BAA4B,EAAE;QAE7B,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wBAAwB,EAAE;QAEzB,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;QACvD,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","file":"component-id.directive.spec.js","sourcesContent":["import { TestBed, ComponentFixture } from \"@angular/core/testing\";\r\nimport { Component, DebugElement } from \"@angular/core\";\r\nimport { By } from \"@angular/platform-browser\";\r\nimport { ComponentIdDirective } from \"./component-id.directive\";\r\n\r\n@Component({\r\n    template: `\r\n        <div [componentId]=\"false\"></div>\r\n        <div [componentId]=\"'testId'\"></div>\r\n    `\r\n})\r\nclass TestComponent {\r\n}\r\n\r\ndescribe(\"ComponentIdDirective test suite\", () => {\r\n\r\n    let fixture: ComponentFixture<TestComponent>,\r\n        directives: DebugElement[];\r\n\r\n    beforeEach(() => {\r\n\r\n        fixture = TestBed.configureTestingModule({\r\n\r\n            declarations: [ComponentIdDirective, TestComponent]\r\n\r\n        }).createComponent(TestComponent);\r\n\r\n        fixture.detectChanges();\r\n\r\n        directives = fixture.debugElement.queryAll(By.directive(ComponentIdDirective));\r\n    });\r\n\r\n\r\n    it(\"should have two directives\", () => {\r\n\r\n        expect(directives.length).toBe(2);\r\n    });\r\n\r\n    it(\"should have one set id\", () => {\r\n\r\n        expect(directives[0].attributes[\"id\"]).toBeUndefined();\r\n        expect(directives[1].attributes[\"id\"]).toEqual(\"testId\");\r\n    });\r\n});\r\n"]}