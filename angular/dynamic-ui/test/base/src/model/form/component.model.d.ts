import { ConditionModel } from './condition.model';
import { ValidationModel } from './validation.model';
import { AttributeModel } from './attribute.model';
import { LabelModel } from './label.model';
import { DatePickerModel } from './date-picker.model';
import { TimePickerModel } from './time-picker.model';
import { SelectDataModel } from './select-data.model';
import { DayModel } from './day.model';
export interface ComponentModel {
    defaultValue?: any;
    type?: string;
    key?: string;
    label?: string;
    input?: boolean;
    required?: boolean;
    multiple?: boolean;
    protected?: boolean;
    unique?: boolean;
    persistent?: boolean;
    tableView?: boolean;
    lockKey?: boolean;
    conditional?: ConditionModel;
    customConditional?: string;
    customClass?: string;
    tabindex?: string;
    inputType?: string;
    tree?: boolean;
    inputMask?: string;
    placeholder?: string;
    prefix?: string;
    suffix?: string;
    rows?: number;
    questions?: Array<LabelModel>;
    size?: string;
    leftIcon?: string;
    rightIcon?: string;
    block?: boolean;
    action?: string;
    disableOnInvalid?: boolean;
    theme?: string;
    html?: string;
    storage?: any;
    attrs?: Array<AttributeModel>;
    tag?: string;
    className?: string;
    values?: Array<LabelModel>;
    data?: SelectDataModel;
    dataSrc?: string;
    valueProperty?: string;
    refreshOn?: string;
    filter?: string;
    authenticate?: boolean;
    template?: string;
    maxWidth?: string;
    minWidth?: string;
    backgroundColor?: string;
    penColor?: string;
    height?: string;
    width?: string;
    footer?: string;
    clearOnHide?: boolean;
    tags?: string[];
    hideLabel?: boolean;
    format?: string;
    enableDate?: boolean;
    enableTime?: boolean;
    datepickerMode?: string;
    datePicker?: DatePickerModel;
    timePicker?: TimePickerModel;
    minDate?: string;
    maxDate?: string;
    defaultDate?: string;
    fields?: DayModel;
    dayFirst?: boolean;
    increment?: string;
    searchFields?: Array<string>;
    selectFields?: Array<string>;
    defaultValues?: Array<any>;
    resource?: string;
    project?: string;
    title?: string;
    isNew?: boolean;
    striped?: boolean;
    bordered?: boolean;
    hover?: boolean;
    condensed?: boolean;
    addAnotherText?: string;
    numRows?: number;
    numCols?: number;
    header?: any;
    caption?: string;
    legend?: string;
    components?: Array<ComponentModel>;
    kickbox?: any;
    validate?: ValidationModel;
    asyncValidate?: ValidationModel;
    disabled?: boolean;
    errorMessages?: {
        [errorCode: string]: string;
    };
    columns?: Array<ComponentModel>;
    hidden?: boolean;
    relation?: Array<any>;
    disabledUpdates?: any;
    hasErrorMessages?: boolean;
    fxLayout?: string;
    fxFlex?: string;
    list?: Array<any>;
    maxLength?: number;
    files?: FileList;
}
